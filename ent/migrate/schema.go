// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ListsColumns holds the columns for the "lists" table.
	ListsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "user_id", Type: field.TypeInt},
	}
	// ListsTable holds the schema information for the "lists" table.
	ListsTable = &schema.Table{
		Name:       "lists",
		Columns:    ListsColumns,
		PrimaryKey: []*schema.Column{ListsColumns[0]},
	}
	// SettingsColumns holds the columns for the "settings" table.
	SettingsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "test", Type: field.TypeString},
		{Name: "list_id", Type: field.TypeInt},
		{Name: "user_id", Type: field.TypeInt},
	}
	// SettingsTable holds the schema information for the "settings" table.
	SettingsTable = &schema.Table{
		Name:       "settings",
		Columns:    SettingsColumns,
		PrimaryKey: []*schema.Column{SettingsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "settings_lists_list",
				Columns:    []*schema.Column{SettingsColumns[2]},
				RefColumns: []*schema.Column{ListsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "settings_users_user",
				Columns:    []*schema.Column{SettingsColumns[3]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "settings_user_id_list_id",
				Unique:  true,
				Columns: []*schema.Column{SettingsColumns[3], SettingsColumns[2]},
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "age", Type: field.TypeInt},
		{Name: "name", Type: field.TypeString},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ListsTable,
		SettingsTable,
		UsersTable,
	}
)

func init() {
	SettingsTable.ForeignKeys[0].RefTable = ListsTable
	SettingsTable.ForeignKeys[1].RefTable = UsersTable
}
